name: Create Jira issue

on:
  issues:
    types:
      - opened

jobs:
  create-issue:
    name: Create Jira issue
    runs-on: ubuntu-latest

    steps:
      - name: Login
        uses: atlassian/gajira-login@v3
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
          JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}

      - name: Checkout main code
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Issue Parser
        uses: stefanbuck/github-issue-praser@v3
        id: issue-parser
        with:
          template-path: .github/ISSUE_TEMPLATE/jira_issue_form.yml

      - name: Log Issue Parser
        run: |
          echo "parentKey = ${{ steps.issue-parser.outputs.issueparser_parentKey }}"
          echo "branch = ${{ steps.issue-parser.outputs.issueparser_branch }}"
          echo "description = ${{ steps.issue-parser.outputs.issueparser_description }}"
          echo "tasks = ${{ steps.issue-parser.outputs.issueparser_tasks }}"

      - name: Convert markdown to Jira Syntax
        uses: peter-evans/jira2md@v1
        id: md2jira
        with:
          input-text: |
            ### Github Issue Link
            - ${{ github.event.issue.html_url }}
            ${{ github.event.issue.body }}
          mode: md2jira

      - name: Get Jira parent issue info
        id: parentinfo
        run: |
          response=$(curl -s -u "${{ secrets.JIRA_USER_EMAIL }}:${{ secrets.JIRA_API_TOKEN }}" \
            -H "Accept: application/json" \
            "${{ secrets.JIRA_BASE_URL }}/rest/api/2/issue/${{ steps.issue-parser.outputs.issueparser_parentKey }}")
          
          echo "$response"
          
          hierarchyLevel=$(echo "$response" | jq '.fields.issuetype.hierarchyLevel')
          echo "hierarchyLevel=$hierarchyLevel" >> $GITHUB_ENV

      - name: Set issue type dynamically
        id: issuetype
        run: |
          if [[ "$hierarchyLevel" -eq 0 ]]; then
            echo "issuetype=Sub-task" >> $GITHUB_ENV
          else
            echo "issuetype=Task" >> $GITHUB_ENV
          fi

      - name: Create Issue
        id: create
        uses: atlassian/gajira-create@v3
        with:
          project: INOUT
          issuetype: ${{ env.issuetype }}
          summary: '${{ github.event.issue.title }}'
          description: '${{ steps.md2jira.outputs.output-text }}'
          fields: |
            {
              "parent": {
                "key": "${{ steps.issue-parser.outputs.issueparser_parentKey }}"
              }
            }

      - name: Log created issue
        run: echo "Jira Issue ${{ steps.create.outputs.issue }} was created"

      - name: Checkout jiratest code
        uses: actions/checkout@v4
        with:
          ref: jiratest

      - name: Create branch with Ticket number
        run: |
          ISSUE_NUMBER="${{ steps.create.outputs.issue }}"
          ISSUE_TITLE="${{ steps.issue-parser.outputs.issueparser_branch }}"
          BRANCH_NAME="${ISSUE_NUMBER}-$(echo ${ISSUE_TITLE} | sed 's/ /-/g')"
          git checkout -b "${BRANCH_NAME}"
          git push origin "${BRANCH_NAME}"

      - name: Update issue title
        uses: actions-cool/issues-helper@v3
        with:
          actions: 'update-issue'
          token: ${{ secrets.GITHUB_TOKEN }}
          title: '[${{ steps.create.outputs.issue }}] ${{ github.event.issue.title }}'

      - name: Add comment with Jira issue link
        uses: actions-cool/issues-helper@v3
        with:
          actions: 'create-comment'
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.issue.number }}
          body: 'Jira Issue Created: [${{ steps.create.outputs.issue }}](${{ secrets.JIRA_BASE_URL }}/browse/${{ steps.create.outputs.issue }})'
